apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)
    //buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    signingConfigs {
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').exists()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            //def sdkDir = properties.getProperty('sdk.dir')
            //def ndkDir = properties.getProperty('ndk.dir')
            def ksPath = properties.getProperty('KS_PATH')
            def keystorePropertiesFile = ksPath == null ? rootProject.file("../keystore.properties") : new File(ksPath)
            if (!keystorePropertiesFile.exists())
                keystorePropertiesFile = rootProject.file("../keystore.properties")
            if (keystorePropertiesFile.exists()) {
                println "ksPath = ${ksPath}ï¼Œusing ${keystorePropertiesFile.absolutePath}"
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                config {
                    keyAlias keystoreProperties['keyAlias']
                    keyPassword keystoreProperties['keyPassword']
                    storeFile file(keystoreProperties['storeFile'])
                    storePassword keystoreProperties['storePassword']
                }
            } else {
                println "no valid ksPath, ignore it."
            }
        }
    }
    defaultConfig {
        applicationId "com.obsez.android.lib.filechooser.demo"
        minSdkVersion project.ANDROID_MIN_SDK_VERSION
        targetSdkVersion project.ANDROID_TARGET_SDK_VERSION
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    lintOptions {
        lintConfig rootProject.file('lint.xml')
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this.
        disable 'OldTargetApi'    // Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'   // For testing purpose. This is safe to remove.
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation project(':library')
//    debugImplementation project(':library')
//    //releaseImplementation 'com.github.hedzr:android-file-chooser:v1.1.17'
//    releaseImplementation 'com.obsez.android.lib.filechooser:filechooser:1.1.17'
//    // implementation 'com.github.hedzr:android-file-chooser:master-SNAPSHOT'
//    // implementation 'com.github.hedzr:android-file-chooser:v1.1.10'

    //unitTestCompile 'com.google.android:android-test:4.1.1.4'
}
repositories {
    maven { url "https://jitpack.io" }
    mavenCentral()
}

